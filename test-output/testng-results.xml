<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="3" passed="3" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-07T13:20:04Z" name="Default suite" finished-at="2023-02-07T13:20:23Z" duration-ms="19083">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2023-02-07T13:20:04Z" name="Default test" finished-at="2023-02-07T13:20:23Z" duration-ms="19083">
      <class name="runner.Invalid_Login_Runner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:04Z" name="setUpClass" finished-at="2023-02-07T15:20:04Z" duration-ms="356" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@2ccc9681]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="Setup(java.lang.String)[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:04Z" name="Setup" finished-at="2023-02-07T15:20:06Z" duration-ms="1703" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:06Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-07T15:20:11Z" duration-ms="5417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check login is successfull with valid Data only and not the invalid Data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Validating Login Function With Multi Values"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:11Z" name="TearDown" finished-at="2023-02-07T15:20:12Z" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method is-config="true" signature="Setup(java.lang.String)[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:12Z" name="Setup" finished-at="2023-02-07T15:20:12Z" duration-ms="914" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:12Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-07T15:20:17Z" duration-ms="4652" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check login is successfull with valid Data only and not the invalid Data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Validating Login Function With Multi Values"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:17Z" name="TearDown" finished-at="2023-02-07T15:20:17Z" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method is-config="true" signature="Setup(java.lang.String)[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:17Z" name="Setup" finished-at="2023-02-07T15:20:18Z" duration-ms="927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Setup -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:18Z" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2023-02-07T15:20:22Z" duration-ms="4068" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["check login is successfull with valid Data only and not the invalid Data"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Validating Login Function With Multi Values"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="TearDown()[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:22Z" name="TearDown" finished-at="2023-02-07T15:20:23Z" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TearDown -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.Invalid_Login_Runner@4b3c354a]" started-at="2023-02-07T15:20:23Z" name="tearDownClass" finished-at="2023-02-07T15:20:23Z" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.Invalid_Login_Runner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
